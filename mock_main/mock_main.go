// Code generated by MockGen. DO NOT EDIT.
// Source: ./client.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockheartbeatRequester is a mock of heartbeatRequester interface.
type MockheartbeatRequester struct {
	ctrl     *gomock.Controller
	recorder *MockheartbeatRequesterMockRecorder
}

// MockheartbeatRequesterMockRecorder is the mock recorder for MockheartbeatRequester.
type MockheartbeatRequesterMockRecorder struct {
	mock *MockheartbeatRequester
}

// NewMockheartbeatRequester creates a new mock instance.
func NewMockheartbeatRequester(ctrl *gomock.Controller) *MockheartbeatRequester {
	mock := &MockheartbeatRequester{ctrl: ctrl}
	mock.recorder = &MockheartbeatRequesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockheartbeatRequester) EXPECT() *MockheartbeatRequesterMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockheartbeatRequester) Get(arg0 string) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockheartbeatRequesterMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockheartbeatRequester)(nil).Get), arg0)
}
